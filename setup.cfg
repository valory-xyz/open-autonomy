[metadata]
name=aea_consensus_algorithms
author=Valory Ltd.
version = attr: aea_consensus_algorithms.__version__
description = Consensus algorithms implemented with the AEA framework.
long_description = file: README.md, CHANGELOG.md, LICENSE
long_description_content_type = "text/markdown"
keywords = aea autonomous-economic-agents agent-framework consensus-algorithms distributed-systems multi-agent-systems multi-agent cryptocurrency cryptocurrencies dezentralized dezentralized-network
license = Apache 2.0 License
classifiers =
    Environment :: Console
    Environment :: Web Environment
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Operating System :: MacOS
    Operating System :: Unix
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Communications
    Topic :: Internet
    Topic :: Scientific/Engineering
    Topic :: Software Development
    Topic :: System

[option.project_urls]
"Bug Reports": "https://github.com/valory-xyz/consensus-algorithms/issues"
"Source": "https://github.com/valory-xyz/consensus-algorithms"

[options]
zip_safe = False
include_package_data = True
packages = find:
scripts =
install_requires =
    open-aea[all]>=1.4.0,<2.0.0
    open-aea-ledger-ethereum>=1.4.0,<2.0.0

python_requires= >=3.6

[options.package_data]
* = *.txt, *.md

[options.packages.find]
include =
    aea_consensus_algorithms*
exclude =

[bdist_wheel]
# we dont support py2
universal = 0

[flake8]
paths=aea_consensus_algorithms,packages,scripts,tests
exclude=.md,
    *_pb2.py,
    custom_types.py
max-line-length = 88
select = B,C,D,E,F,I,W,
ignore = E203,E501,W503,D202,B014,D400,D401,DAR
application-import-names = aea_consensus_algorithms,packages,tests,scripts

# ignore as too restrictive for our needs:
# D400: First line should end with a period
# D401: First line should be in imperative mood
# E501: https://www.flake8rules.com/rules/E501.html (Line too long)
# E203: https://www.flake8rules.com/rules/E203.html (Whitespace)
# W503: https://www.flake8rules.com/rules/W503.html (Line break)
# D202: blank lines
# B014: redundant exception

[isort]
# for black compatibility
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
ensure_newline_before_comments = True
line_length=88
# custom configurations
order_by_type=False
case_sensitive=True
lines_after_imports=2
skip =
skip_glob =
known_first_party=aea_consensus_algorithms
known_packages=packages
known_local_folder=tests
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,PACKAGES,LOCALFOLDER

[mypy]
python_version = 3.7
strict_optional = True
exclude=(.*_pb2|.*custom_types)

# Before adding a module here, make sure it does not support type hints

# Per-module options for aea dir:

[mypy-aea.*]
ignore_missing_imports = True

[mypy-ipfshttpclient.*]
ignore_missing_imports = True

# Per-module options for examples dir:

# Per-module options for tests dir:

[mypy-pytest]
ignore_missing_imports = True

[mypy-docker.*]
ignore_missing_imports = True

[mypy-hypothesis.*]
ignore_missing_imports = True

# Per-module options for packages dir:

[mypy-eth_keys.*]
ignore_errors=True

[mypy-eth_account.*]
ignore_missing_imports=True

[mypy-eth_abi.*]
ignore_missing_imports = True

[mypy-packages.valory.protocols.abci.custom_types]
ignore_errors=True

[mypy-packages.valory.protocols.abci.abci_pb2]
ignore_errors=True

[mypy-packages.valory.protocols.ledger_api.ledger_api_pb2]
ignore_errors=True

[mypy-packages.valory.protocols.contract_api.contract_api_pb2]
ignore_errors=True

[mypy-packages.valory.protocols.http.http_pb2]
ignore_errors=True

[mypy-packages.open_aea.protocols.signing.signing_pb2]
ignore_errors=True

[mypy-packages.valory.connections.abci.tendermint.types.*]
ignore_errors=True

[mypy-py_eth_sig_utils.*]
ignore_missing_imports = True

[mypy-aiohttp.*]
ignore_missing_imports = True

[mypy-multidict.*]
ignore_missing_imports = True

[mypy-certifi.*]
ignore_missing_imports = True

[mypy-eth_typing.*]
ignore_missing_imports = True

[mypy-packaging.*]
ignore_missing_imports = True

[mypy-hexbytes.*]
ignore_missing_imports = True

[mypy-web3.*]
ignore_missing_imports = True

[mypy-joblib.*]
ignore_missing_imports = True

[mypy-pmdarima.*]
ignore_missing_imports = True

[mypy-sklearn.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-_pytest.*]
ignore_missing_imports = True

[mypy-optuna.*]
ignore_missing_imports = True

[mypy-aea_ledger_ethereum.*]
ignore_missing_imports = True

# Per-module options for scripts dir:

[mypy-click.*]
ignore_missing_imports = True

[mypy-semver.*]
ignore_missing_imports = True

[mypy-scripts.common.*]
ignore_missing_imports = True

[mypy-aea_cli_ipfs.*]
ignore_missing_imports = True


[darglint]
docstring_style=sphinx
strictness=short
ignore_regex=async_act
ignore=DAR401
