; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, safety, black, black-check, isort, isort-check, check-copyright, check-hash, check-packages, check-dependencies, check-api-docs, docs, check-doc-links-hashes, flake8, mypy, pylint, darglint, vulture, check-generate-all-protocols, generate-all-protocols, check-abciapp-specs, check-abci-docstrings, check-handlers, py{3.8,3.9,3.10,3.11}-{win,linux,darwin}
; when running locally we don't want to fail for no good reason
skip_missing_interpreters = true

[deps-framework]
deps =
    docker==6.1.2
    valory-docker-compose==1.29.3
    Flask==2.0.2
    open-aea[all]==1.50.0
    open-aea-cli-ipfs==1.50.0
    open-aea-ledger-ethereum==1.50.0
    open-aea-ledger-ethereum-hwi==1.50.0
    Werkzeug==2.0.3
    requests==2.28.1
    texttable==1.6.7
    python-dotenv>=0.14.5,<0.22.0

[deps-tests]
deps =
    {[deps-framework]deps}
    tomte[tests]==0.2.15

[deps-packages]
deps =
    {[deps-tests]deps}
    aiohttp<4.0.0,>=3.8.5
    asn1crypto<1.5.0,>=1.4.0
    ecdsa>=0.15
    web3<7,>=6.0.0
    certifi
    multidict
    eth_typing
    eth-account>=0.8.0,<0.9.0
    typing_extensions>=3.10.0.2
    hexbytes
    packaging
    pytest-asyncio
    open-aea-ledger-cosmos==1.50.0
    open-aea-cosmpy==0.6.7
    grpcio==1.53.0
    hypothesis==6.21.6
    protobuf<4.25.0,>=4.21.6
    pytz==2022.2.1
    py-ecc==6.0.0
    python-dotenv>=0.14.5,<0.22.0
    requests==2.28.1
    tomte[tests,cli]==0.2.15
    texttable==1.6.7
    toml==0.10.2
    eth-utils==2.2.0
    eth-abi==4.0.0
    pycryptodome==3.18.0
    jsonschema<4.4.0,>=4.3.0
    gql==3.5.0
    docker==6.1.2
    Flask==2.0.2
    open-aea[all]==1.50.0
    open-aea-ledger-ethereum==1.50.0
    open-aea-ledger-ethereum-hwi==1.50.0
    open-aea-cli-ipfs==1.50.0
    ipfshttpclient==0.8.0a2
    Werkzeug==2.0.3
    watchdog>=2.1.6
    pytest==7.2.1
    click==8.0.2
    valory-docker-compose==1.29.3

[deps-base]
deps ={[deps-packages]deps}

[testenv-multi-ubuntu]
deps =
    {[deps-base]deps}

[testenv-multi-win]
deps =
    {[deps-base]deps}
    pywin32==304
    websocket-client==0.59.0
    certifi==2021.10.8
    idna==3.3

[testenv-multi-darwin]
deps = {[deps-base]deps}

[testenv]
basepython = python3
whitelist_externals = /bin/sh
deps =
    {[deps-base]deps}
passenv = *
extras = all
setenv =
    PYTHONHASHSEED=0
    PYTHONPATH={env:PWD:%CD%}
    AUTONOMY_IMAGE_VERSION=latest

[commands-framework]
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    pytest -rfE --doctest-modules autonomy tests/ --cov=autonomy --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}

[commands-packages]
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    aea test --cov --append packages -p no:hypothesispytest {posargs}

[commands-packages-cov]
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    aea test --cov --append by-path packages/valory/connections/abci
    aea test --cov --append by-path packages/valory/contracts/gnosis_safe
    aea test --cov --append by-path packages/valory/contracts/gnosis_safe_proxy_factory
    aea test --cov --append by-path packages/valory/contracts/multisend
    aea test --cov --append by-path packages/valory/contracts/service_registry
    aea test --cov --append by-path packages/valory/contracts/component_registry
    aea test --cov --append by-path packages/valory/contracts/agent_registry
    aea test --cov --append by-path packages/valory/protocols/abci
    aea test --cov --append by-path packages/valory/protocols/tendermint
    aea test --cov --append by-path packages/valory/skills/abstract_abci
    aea test --cov --append by-path packages/valory/skills/abstract_round_abci
    aea test --cov --append by-path packages/valory/skills/counter
    aea test --cov --append by-path packages/valory/skills/counter_client
    aea test --cov --append by-path packages/valory/skills/register_reset_abci
    aea test --cov --append by-path packages/valory/skills/register_reset_recovery_abci
    aea test --cov --append by-path packages/valory/skills/register_termination_abci
    aea test --cov --append by-path packages/valory/skills/registration_abci
    aea test --cov --append by-path packages/valory/skills/reset_pause_abci
    aea test --cov --append by-path packages/valory/skills/slashing_abci
    aea test --cov --append by-path packages/valory/skills/offend_abci
    aea test --cov --append by-path packages/valory/skills/offend_slash_abci
    aea test --cov --append by-path packages/valory/skills/termination_abci
    aea test --cov --append by-path packages/valory/skills/test_abci
    aea test --cov --append by-path packages/valory/skills/transaction_settlement_abci

[testenv:py3.8-linux]
basepython = python3.8
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.8-linux]
basepython = python3.8
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:py3.9-linux]
basepython = python3.9
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.9-linux]
basepython = python3.9
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:py3.10.9-linux]
basepython = python3.10
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.10.9-linux]
basepython = python3.10
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages-cov]commands}

[testenv:e2e-py3.10.9-linux]
basepython = python3.10
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:py3.11-linux]
basepython = python3.11
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.11-linux]
basepython = python3.11
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:py3.8-win]
basepython = python3.8
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.8-win]
basepython = python3.8
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:py3.9-win]
basepython = python3.9
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.9-win]
basepython = python3.9
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:py3.10.9-win]
basepython = python3.10
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.10.9-win]
basepython = python3.10
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:py3.11-win]
basepython = python3.11
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.11-win]
basepython = python3.11
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:py3.8-darwin]
basepython = python3.8
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.8-darwin]
basepython = python3.8
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:py3.9-darwin]
basepython = python3.9
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.9-darwin]
basepython = python3.9
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:py3.10.9-darwin]
basepython = python3.10
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.10.9-darwin]
basepython = python3.10
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:py3.11-darwin]
basepython = python3.11
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-framework]commands}

[testenv:packages-py3.11-darwin]
basepython = python3.11
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:bandit]
skipsdist = True
skip_install = True
deps =
    tomte[bandit]==0.2.15
commands =
    bandit -r autonomy plugins -x */tests/*
    bandit -s B101 -r packages/valory
    bandit -s B101 -r tests scripts

[testenv:black]
skipsdist = True
skip_install = True
deps =
    tomte[black]==0.2.15
commands =
    black autonomy packages/valory scripts tests deployments plugins

[testenv:black-check]
skipsdist = True
skip_install = True
deps =
    tomte[black]==0.2.15
commands =
    black --check autonomy packages/valory scripts tests deployments plugins

[testenv:isort]
skipsdist = True
skip_install = True
deps =
    tomte[isort]==0.2.15
commands =
    isort autonomy/
    isort packages/valory --gitignore
    isort scripts/
    isort tests/
    isort deployments/
    isort plugins/

[testenv:isort-check]
skipsdist = True
skip_install = True
deps =
    tomte[isort]==0.2.15
commands =
    isort --check-only --gitignore autonomy packages/valory scripts tests plugins

[testenv:check-copyright]
skipsdist = True
skip_install = True
deps =
commands =
    {toxinidir}/scripts/check_copyright.py --check

[testenv:fix-copyright]
skipsdist = True
skip_install = True
deps =
commands =
    {toxinidir}/scripts/check_copyright.py

[testenv:check-hash]
skipsdist = True
usedevelop = True
deps =
    {[deps-packages]deps}
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy packages lock --check

[testenv:check-packages]
usedevelop = True
deps =
    {[deps-packages]deps}
commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    python -m pip install open-aea-ledger-solana==1.49.0

    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy check-packages

[testenv:lock-packages]
usedevelop = True
deps =
    {[deps-packages]deps}
commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    autonomy packages lock
    python scripts/check_doc_ipfs_hashes.py --fix
    python scripts/generate_package_list.py

[testenv:check-dependencies]
skipsdist = True
usedevelop = True
deps =
    {[deps-packages]deps}
commands =
    autonomy packages sync
    {toxinidir}/scripts/check_dependencies.py

[testenv:check-api-docs]
skipsdist = True
skip_install = True
deps =
    {[deps-packages]deps}
    tomte[docs]==0.2.15
commands =
    {toxinidir}/scripts/generate_api_documentation.py --check-clean

[testenv:generate-api-documentation]
skipsdist = True
skip_install = True
deps =
    {[deps-packages]deps}
    tomte[docs]==0.2.15
commands =
    {toxinidir}/scripts/generate_api_documentation.py

[testenv:check-doc-links-hashes]
skipsdist = True
skip_install = True
commands =
    aea init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    aea packages sync
    {toxinidir}/scripts/check_doc_links.py
    {toxinidir}/scripts/check_doc_ipfs_hashes.py
    {toxinidir}/scripts/check_ipfs_hashes_pushed.py

[testenv:fix-doc-hashes]
skipsdist = True
skip_install = True
commands =
    {toxinidir}/scripts/generate_package_list.py
    {toxinidir}/scripts/check_doc_ipfs_hashes.py --fix

[testenv:docs]
skipsdist = True
skip_install = True
deps =
    tomte[docs]==0.2.15
    mkdocs-redirects
commands =
    ; TODO: Add --strict flag after fixing the material dependency
    mkdocs build --clean

[testenv:docs-serve]
skipsdist = True
skip_install = True
deps =
    tomte[docs]==0.2.15
    mkdocs-redirects
commands =
    ; TODO: Add --strict flag after fixing the material dependency
    mkdocs build --clean
    python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    mkdocs serve -a localhost:8080

[testenv:flake8]
skipsdist = True
skip_install = True
deps =
    tomte[flake8]==0.2.15
commands =
    flake8 autonomy packages/valory scripts tests deployments plugins

[testenv:mypy]
skipsdist = True
skip_install = True
deps =
    tomte[mypy]==0.2.15
commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    mypy autonomy packages/valory plugins/aea-test-autonomy/aea_test_autonomy tests scripts --disallow-untyped-defs --config-file tox.ini
    mypy plugins/aea-test-autonomy/tests --disallow-untyped-defs --config-file tox.ini

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
deps =
    {[deps-packages]deps}
    tomte[pylint]==0.2.15
commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-test-autonomy
    pylint --rcfile=.pylintrc autonomy packages/valory scripts deployments plugins -j 0
    # -j0 to utilize all cpu cores

[testenv:safety]
skipsdist = True
skip_install = True
deps =
    tomte[safety]==0.2.15
commands =
    safety check -i 37524 -i 38038 -i 37776 -i 38039 -i 39621 -i 40291 -i 39706 -i 41002 -i 51358 -i 51499

[testenv:vulture]
skipsdist = True
skip_install = True
deps =
    tomte[vulture]==0.2.15
commands =
    vulture autonomy/services scripts/whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    tomte[darglint]==0.2.15
commands =
    darglint autonomy scripts packages/valory/* tests deployments plugins

[testenv:check-generate-all-protocols]
skipsdist = True
usedevelop = True
deps =
    {[deps-packages]deps}
    tomte[isort]==0.2.15
    tomte[black]==0.2.15
commands =
    aea generate-all-protocols --check-clean

[testenv:generate-all-protocols]
skipsdist = True
usedevelop = True
deps =
    {[deps-packages]deps}
    tomte[isort]==0.2.15
    tomte[black]==0.2.15
commands =
    aea generate-all-protocols

[testenv:spell-check]
whitelist_externals = mdspell
skipsdist = True
usedevelop = True
deps = tomte[cli]==0.2.15
commands = tomte check-spelling

[testenv:abci-docstrings]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse docstrings --update

[testenv:check-abci-docstrings]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse docstrings

[testenv:check-abciapp-specs]
skipsdist = True
usedevelop = True
commands =
    autonomy init --reset --author ci --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy analyse fsm-specs

[testenv:check-handlers]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse handlers -h abci -h http -h contract_api -h ledger_api -h signing -i abstract_abci -i counter -i counter_client

[testenv:check-dialogues]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse dialogues -d abci -d http -d contract_api -d ledger_api -d signing -i abstract_abci -i counter -i counter_client


[testenv:liccheck]
skipsdist = True
usedevelop = True
deps = tomte[liccheck,cli]==0.2.15
commands =
    tomte freeze-dependencies --output-path {envtmpdir}/requirements.txt
    liccheck -s tox.ini -r {envtmpdir}/requirements.txt -l PARANOID

[pytest]
log_cli = 1
log_cli_level = DEBUG
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format=%Y-%m-%d %H:%M:%S

markers =
    integration: marks integration tests which require other network services
    e2e: marks end-to-end agent tests


filterwarnings =
    ignore::DeprecationWarning:aea.*:
    ignore::DeprecationWarning
    ignore:.*MismatchedABI
    ignore:.*cannot collect test class 'TestAbciApp'
    ignore:.*cannot collect test class 'TestAbciConsensusBehaviour'

[flake8]
paths=autonomy,packages,scripts,tests
exclude=.md,
    *_pb2.py,
    autonomy/__init__.py,
    custom_types.py,
    *_pb2_grpc.py,
    packages/valory/connections/http_client,
    packages/valory/connections/ledger,
    packages/valory/connections/p2p_libp2p_client,
    packages/valory/protocols/acn,
    packages/valory/protocols/contract_api,
    packages/valory/protocols/http,
    packages/valory/protocols/ledger_api
max-line-length = 88
select = B,C,D,E,F,I,W,
ignore = E203,E501,W503,D202,B014,D400,D401,DAR,B028,B017
application-import-names = autonomy,packages,tests,scripts

# ignore as too restrictive for our needs:
# D400: First line should end with a period
# D401: First line should be in imperative mood
# E501: https://www.flake8rules.com/rules/E501.html (Line too long)
# E203: https://www.flake8rules.com/rules/E203.html (Whitespace)
# W503: https://www.flake8rules.com/rules/W503.html (Line break)
# D202: blank lines
# B014: redundant exception

[isort]
# for black compatibility
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
ensure_newline_before_comments = True
line_length=88
# custom configurations
order_by_type=False
case_sensitive=True
lines_after_imports=2
skip =
skip_glob =
known_first_party=autonomy
known_packages=packages
known_local_folder=tests
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,PACKAGES,LOCALFOLDER

[mypy]
python_version = 3.10
strict_optional = True
exclude=(.*_pb2|.*custom_types|packages/valory/connections/abci/tendermint/abci/|autonomy/data/Dockerfiles|packages/valory/connections/http_client|packages/valory/connections/ledger|packages/valory/connections/p2p_libp2p_client|packages/valory/protocols/acn|packages/valory/protocols/contract_api|packages/valory/protocols/http|packages/valory/protocols/ledger_api|packages/valory/protocols/abci|packages/valory/protocols/tendermint|packages/valory/protocols/ipfs)

# Before adding a module here, make sure it does not support type hints

# Per-module options for aea dir:

[mypy-aea.*]
ignore_missing_imports = True

[mypy-google.*]
ignore_missing_imports = True

[mypy-ipfshttpclient.*]
ignore_missing_imports = True

# Per-module options for examples dir:

# Per-module options for tests dir:

[mypy-pytest]
ignore_missing_imports = True

[mypy-docker.*]
ignore_missing_imports = True

[mypy-hypothesis.*]
ignore_missing_imports = True

# Per-module options for packages dir:

[mypy-eth_keys.*]
ignore_errors=True

[mypy-eth_account.*]
ignore_missing_imports=True

[mypy-eth_abi.*]
ignore_missing_imports = True

[mypy-packages.valory.protocols.abci.custom_types]
ignore_errors=True

[mypy-packages.valory.protocols.abci.abci_pb2]
ignore_errors=True

[mypy-packages.valory.protocols.ledger_api.ledger_api_pb2]
ignore_errors=True

[mypy-packages.valory.protocols.contract_api.contract_api_pb2]
ignore_errors=True

[mypy-packages.valory.protocols.http.http_pb2]
ignore_errors=True

[mypy-packages.open_aea.protocols.signing.signing_pb2]
ignore_errors=True

[mypy-packages.valory.connections.abci.tendermint.types.*]
ignore_errors=True

[mypy-packages.valory.connections.abci.tendermint.types.types_pb2]
ignore_errors=True

[mypy-packages.valory.connections.abci.tendermint.abci.types_pb2]
ignore_errors=True

[mypy-packages.valory.connections.abci.tendermint.abci.types_pb2_grpc]
ignore_errors=True

[mypy-autonomy.data.Dockerfiles.tendermint.tendermint]
ignore_missing_imports = True

[mypy-packages.valory.protocols.acn.acn_pb2]
ignore_errors = True

[mypy-packages.valory.protocols.tendermint.tendermint_pb2]
ignore_errors = True

[mypy-typed-ast.*]
ignore_missing_imports = True

[mypy-py_eth_sig_utils.*]
ignore_missing_imports = True

[mypy-aiohttp.*]
ignore_missing_imports = True

[mypy-multidict.*]
ignore_missing_imports = True

[mypy-certifi.*]
ignore_missing_imports = True

[mypy-eth_typing.*]
ignore_missing_imports = True

[mypy-packaging.*]
ignore_missing_imports = True

[mypy-hexbytes.*]
ignore_missing_imports = True

[mypy-web3.*]
ignore_missing_imports = True

[mypy-_pytest.*]
ignore_missing_imports = True

[mypy-aea_ledger_ethereum.*]
ignore_missing_imports = True

[mypy-aea_ledger_ethereum_hwi.*]
ignore_missing_imports = True

[mypy-google.protobuf.*]
ignore_missing_imports=True

[mypy-requests.*]
ignore_missing_imports=True

[mypy-yaml]
ignore_missing_imports=True

[mypy-toml]
ignore_missing_imports=True

[mypy-jsonschema.*]
ignore_missing_imports=True

[mypy-pkg_resources]
ignore_missing_imports=True

# Per-module options for scripts dir:

[mypy-click.*]
ignore_missing_imports = True

[mypy-semver.*]
ignore_missing_imports = True

[mypy-scripts.common.*]
ignore_missing_imports = True

[mypy-aea_cli_ipfs.*]
ignore_missing_imports = True

[mypy-watchdog.*]
ignore_missing_imports = True

[mypy-flask.*]
ignore_missing_imports = True

[mypy-werkzeug.*]
ignore_missing_imports = True

[mypy-compose.*]
ignore_missing_imports = True

[mypy-_strptime.*]
ignore_missing_imports = True

[mypy-pytz.*]
ignore_missing_imports = True

[mypy-py_ecc.*]
ignore_missing_imports = True

[mypy-grpc.*]
ignore_missing_imports = True

[mypy-pytest_asyncio.*]
ignore_missing_imports = True

[mypy-texttable.*]
ignore_missing_imports = True

[mypy-dotenv.*]
ignore_missing_imports = True

[mypy-Crypto.*]
ignore_missing_imports = True

[mypy-eth_utils.*]
ignore_missing_imports = True

[mypy-solders.*]
ignore_missing_imports = True

[mypy-gql.*]
ignore_missing_imports = True

[darglint]
docstring_style=sphinx
strictness=short
ignore_regex=async_act
ignore=DAR401

; some useful links:
; - https://janelia-flyem.github.io/licenses.html
; - https://dwheeler.com/essays/floss-license-slide.html

; Authorized and unauthorized licenses in LOWER CASE
[Licenses]
authorized_licenses:
    ; aliases for MIT License
    MIT
    MIT license
    https://opensource.org/licenses/MIT
    License :: OSI Approved :: MIT

    ; aliases for BSD License (and variants)
    BSD
    BSD license
    new BSD
    (new) BSD
    new BDS license
    simplified BSD
    3-Clause BSD
    BSD-3-Clause
    BSD 3-Clause
    BSD-2-Clause
    BSD-like
    BSD-2-Clause or Apache-2.0
    BSD, Public Domain

        ; Apache
        Apache Software

    ; aliases for Apache License version 2.0
    Apache 2.0
    Apache-2.0
    Apache License 2.0
    Apache License, Version 2.0
    Apache License Version 2.0
    Apache2
    ASL 2
;   some packages use 'Apache Software' as license string,
;   which is ambiguous. However, 'Apache Software'
;   will likely match with 'Apache 2.0'
    Apache Software
    BSD, Public Domain, Apache
    http://www.apache.org/licenses/LICENSE-2.0

;   PSF (BSD-style)
    Python Software Foundation
    PSF

    ; other permissive licenses
    Historical Permission Notice and Disclaimer (HPND)
    HPND
    ISC
    BSD or Apache License, Version 2.0
    Modified BSD
    Expat
        Public Domain

unauthorized_licenses:
;   aliases for MPL 2.0
    MPL-2.0
    MPL 2.0
    Mozilla Public License 2.0 (MPL 2.0)

;    Section 8 of https://www.mozilla.org/en-US/MPL/2.0/Revision-FAQ/
    MPL 1.1
    MPL-1.1

;   http://www.gnu.org/licenses/license-list.en.html#apache2
    GPLv2
    GPLv2+
    GNU General Public License v2 or later (GPLv2+)

;   LGPL
    LGPL
    GNU Library or Lesser General Public License (LGPL)

;   LGPLv2.1
    LGPLv2.1
    LGPLv2.1+
        GNU Lesser General Public License v2 or later (LGPLv2+)

;   LGPLv3
    GNU Lesser General Public License v3 (LGPLv3)
    LGPLv3

;   GPL v3
    GPL v3
    GPLv3+
        GNU General Public License v3 (GPLv3)

[Authorized Packages]
gym: >=0.15
;filelock is public domain
filelock: >=3.0.12
fetchai-ledger-api: >=0.0.1
chardet: >=3.0.4
certifi: >=2019.11.28
;TODO: the following are confilctive packages that need to be sorted
; sub-dep of open-aea-ledger-ethereum-hwi
hidapi: >=0.13.1
; shows in pip freesze but not referenced on code
paramiko: >=3.1.0
; sub-dep of docker-compose
websocket-client: >=0.59.0
sniffio: >=1.3.0