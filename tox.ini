; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, safety, black, black-check, isort, isort-check, copyright_check, docs, flake8, liccheck, mypy, py{3.6,3.7,3.8,3.9}


[testenv]
basepython = python3
whitelist_externals = poetry
passenv = *
extras = all
deps = 
    poetry==1.1.10

commands =
    poetry install -v
    poetry run pip install aea-ledger-ethereum>=1.0.0,<2.0.0 --no-deps
    poetry run pytest -rfE --doctest-modules aea_consensus_algorithms tests/ --cov=aea_consensus_algorithms --cov-report=html --cov=packages/valory --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}

[testenv:py3.6]
basepython = python3.6
usedevelop = True

[testenv:py3.7]
basepython = python3.7
usedevelop = True

[testenv:py3.8]
basepython = python3.8
usedevelop = True

[testenv:py3.9]
basepython = python3.9
usedevelop = True


[testenv:bandit]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run bandit -r aea_consensus_algorithms packages
           bandit -s B101 -r tests scripts

[testenv:black]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run black aea_consensus_algorithms packages scripts tests

[testenv:black-check]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run black aea_consensus_algorithms packages scripts tests

[testenv:isort]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run black aea_consensus_algorithms packages scripts tests

[testenv:isort-check]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run isort --check-only --verbose aea_consensus_algorithms packages scripts tests

[testenv:check-copyright]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run {toxinidir}/scripts/check_copyright.py --directory {toxinidir}

[testenv:check-hash]
skipsdist = True
usedevelop = True
commands = 
    poetry install -v
    poetry run {toxinidir}/scripts/generate_ipfs_hashes.py --check {posargs}

[testenv:check-packages]
skipsdist = True
usedevelop = True
commands = 
    poetry install -v
    poetry run {toxinidir}/scripts/check_packages.py

[testenv:docs]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
    poetry run mkdocs build --clean

[testenv:docs-serve]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
    poetry run  mkdocs build --clean
    poetry run  python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    poetry run mkdocs serve -a localhost:8080

[testenv:flake8]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run flake8 aea_consensus_algorithms packages scripts tests

[testenv:mypy]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run mypy aea_consensus_algorithms packages scripts --disallow-untyped-defs
           mypy tests

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
commands = 
    poetry install -v
    poetry run pylint aea_consensus_algorithms packages scripts

[testenv:safety]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run safety check -i 37524 -i 38038 -i 37776 -i 38039 -i 39621 -i 40291 -i 39706 -i 41002

[testenv:vulture]
skipsdist = True
skip_install = True
commands = 
    poetry install -v
    poetry run vulture aea_consensus_algorithms scripts/whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
;TODO eventually replace 'packages/valory/*' with 'packages';
;  this is due to a limitation of darglint that cannot skip
;  certain files; and
commands = 
    poetry install -v
    poetry run darglint aea_consensus_algorithms scripts packages/valory/connections packages/valory/skills packages/valory/agents packages/valory/contracts

[testenv:check_generate_all_protocols]
skipsdist = True
usedevelop = True
commands = 
    poetry install -v
    poetry run {toxinidir}/scripts/generate_all_protocols.py --no-bump --check-clean

[testenv:spell_check]
skipsdist = True
usedevelop = True
commands = 
    poetry install -v
    poetry run {toxinidir}/scripts/spell-check.sh
