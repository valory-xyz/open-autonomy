; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, safety, black, black-check, isort, isort-check, check-copyright, docs, flake8, liccheck, mypy, py{3.6,3.7,3.8,3.9}


[testenv]
basepython = python3
whitelist_externals = /bin/sh
passenv = *
extras = all
deps =
    requests==2.26.0
    docker==5.0.2
    pytest==6.2.5
    pytest-randomly==3.8.0
    pytest-cov==2.12.1
    pytest-asyncio==0.15.1
    hypothesis==6.21.6
    py-eth-sig-utils==0.4.0
    aiohttp<3.8,>=3.7.4
    numpy<1.22,>=1.21.4
    optuna<2.11,>=2.10.0
    pandas<1.4,>=1.3.4
    pandas-stubs<1.2.1,>=1.2.0.39
    pmdarima<1.9,>=1.8.4
    scikit-learn<1.1,>=1.0.1
    open-aea==1.9.0
    open-aea-cli-ipfs==1.9.0
    open-aea-ledger-ethereum==1.9.0
    Flask==2.0.2
    protobuf==3.19.4
    atheris==2.0.10
setenv =
    PYTHONHASHSEED=0

commands =
    pytest -rfE --doctest-modules aea_swarm tests/ --cov=aea_swarm --cov-report=html --cov=packages/valory --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}


[testenv:py3.6]
basepython = python3.6
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.7]
basepython = python3.7
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.8]
basepython = python3.8
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}

[testenv:py3.9]
basepython = python3.9
usedevelop = True
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}


[testenv:bandit]
skipsdist = True
skip_install = True
deps =
    bandit==1.7.0
commands = bandit -r aea_swarm packages/valory
           bandit -s B101 -r tests scripts

[testenv:black]
skipsdist = True
skip_install = True
deps =
    black==21.6b0
    click==8.0.4
commands = black aea_swarm packages/valory scripts tests

[testenv:black-check]
skipsdist = True
skip_install = True
deps =
    black==21.6b0
    click==8.0.4
commands = black --check aea_swarm packages/valory scripts tests

[testenv:isort]
skipsdist = True
skip_install = True
deps = isort==5.9.3
commands =
    isort aea_swarm/
    isort packages/valory
    isort scripts/
    isort tests/

[testenv:isort-check]
skipsdist = True
skip_install = True
deps = isort==5.9.3
commands = isort --check-only aea_swarm packages/valory scripts tests

[testenv:check-copyright]
skipsdist = True
skip_install = True
deps =
commands = {toxinidir}/scripts/check_copyright.py --check

[testenv:check-hash]
skipsdist = True
usedevelop = True
deps =
    open-aea==1.9.0
    ipfshttpclient==0.8.0a2
commands = python -m aea.cli hash all --check

[testenv:check-packages]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_packages.py

[testenv:check-pipfiles]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_pipfiles.py

[testenv:check-api-docs]
skipsdist = True
skip_install = True
deps =
    pydoc-markdown==4.3.2
    open-aea==1.9.0
commands = {toxinidir}/scripts/generate_api_documentation.py --check-clean

[testenv:docs]
skipsdist = True
skip_install = True
deps =
    bs4==0.0.1
    click==8.0.4
    markdown==3.3.4
    click==8.0.4
    mkdocs==1.3.0
    markdown-include==0.6.0
    mkdocs-material==7.1.10
    mkdocs-macros-plugin==0.7.0
    pymdown-extensions==8.2
    Pygments==2.11.2
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean

[testenv:docs-serve]
skipsdist = True
skip_install = True
deps =
    bs4==0.0.1
    markdown==3.3.4
    mkdocs==1.3.0
    markdown-include==0.6.0
    mkdocs-material==7.1.10
    pymdown-extensions==8.2
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean
           python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
           mkdocs serve -a localhost:8080

[testenv:flake8]
skipsdist = True
skip_install = True
deps =
    flake8==3.9.2
    flake8-bugbear==21.9.1
    flake8-docstrings==1.6.0
    flake8-eradicate==1.1.0
    flake8-isort==4.0.0
    pydocstyle==6.1.1
commands = flake8 aea_swarm packages/valory scripts tests

[testenv:mypy]
skipsdist = True
skip_install = True
deps =
    typed-ast==1.4.3
    mypy==0.910
commands = mypy aea_swarm packages/valory --disallow-untyped-defs
           mypy tests --disallow-untyped-defs
           mypy scripts

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
deps =
    pylint==2.11.1
    pytest==6.2.5
    ipfshttpclient==0.8.0a2
    py-eth-sig-utils==0.4.0
    aiohttp<3.8,>=3.7.4
    multidict==5.2.0
    certifi==2021.10.8
    Flask==2.0.2
    protobuf==3.19.4
    open-aea==1.9.0
    open-aea-ledger-ethereum===1.9.0

commands = pylint aea_swarm packages/valory scripts

[testenv:safety]
skipsdist = True
skip_install = True
deps =
    safety==1.10.3
commands = safety check -i 37524 -i 38038 -i 37776 -i 38039 -i 39621 -i 40291 -i 39706 -i 41002

[testenv:vulture]
skipsdist = True
skip_install = True
deps =
    vulture==2.3
commands = vulture aea_swarm scripts/whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    darglint==1.8.0
commands = 	darglint aea_swarm scripts packages/valory/* tests

[testenv:check-generate-all-protocols]
skipsdist = True
usedevelop = True
deps =
    ipfshttpclient==0.8.0a2
    black==21.6b0
    click==8.0.4
    isort==5.9.3
commands = aea generate-all-protocols --no-bump --check-clean

[testenv:spell-check]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/spell-check.sh


[testenv:check-abci-docstrings]
skipsdist = True
usedevelop = True
deps =
    py-eth-sig-utils==0.4.0
    numpy<1.22,>=1.21.4
    optuna<2.11,>=2.10.0
    pandas<1.4,>=1.3.4
    pandas-stubs<1.2.1,>=1.2.0.39
    pmdarima<1.9,>=1.8.4
    open-aea==1.9.0
    open-aea-ledger-ethereum==1.9.0
    Flask==2.0.2
commands = swarm analyse abci docstrings --check


[testenv:check-abciapp-specs]
skipsdist = True
usedevelop = True
commands = python -m aea_swarm.cli analyse abci check-app-specs --check-all

[testenv:check-handlers]
skipsdist = True
usedevelop = True
commands = swarm analyse abci check-handlers
